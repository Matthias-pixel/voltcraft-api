# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Outlet(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, mac_address: str=None, alias: str=None):  # noqa: E501
        """Outlet - a model defined in Swagger

        :param mac_address: The mac_address of this Outlet.  # noqa: E501
        :type mac_address: str
        :param alias: The alias of this Outlet.  # noqa: E501
        :type alias: str
        """
        self.swagger_types = {
            'mac_address': str,
            'alias': str
        }

        self.attribute_map = {
            'mac_address': 'mac-address',
            'alias': 'alias'
        }
        self._mac_address = mac_address
        self._alias = alias

    @classmethod
    def from_dict(cls, dikt) -> 'Outlet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Outlet of this Outlet.  # noqa: E501
        :rtype: Outlet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mac_address(self) -> str:
        """Gets the mac_address of this Outlet.

        Mac address of the outlet.  # noqa: E501

        :return: The mac_address of this Outlet.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address: str):
        """Sets the mac_address of this Outlet.

        Mac address of the outlet.  # noqa: E501

        :param mac_address: The mac_address of this Outlet.
        :type mac_address: str
        """

        self._mac_address = mac_address

    @property
    def alias(self) -> str:
        """Gets the alias of this Outlet.

        Alias of the outlet  # noqa: E501

        :return: The alias of this Outlet.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias: str):
        """Sets the alias of this Outlet.

        Alias of the outlet  # noqa: E501

        :param alias: The alias of this Outlet.
        :type alias: str
        """

        self._alias = alias
